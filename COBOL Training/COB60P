        IDENTIFICATION DIVISION.
       PROGRAM-ID.    COB60P.
       AUTHOR.        JUSTIN MATLOCK.
       INSTALLATION.  LEARNQUEST, USA.
       DATE-WRITTEN.  JULY, 2017.
       DATE-COMPILED.
      ****************************************************************
      *                      PROGRAM COB60P                          *
      ****************************************************************
      *                                                              *
      *   THIS PROGRAM CREATES THE FIRST MONTHLY BONUS REPORT        *
      *                                                              *
      ****************************************************************

      ****************************************************************
      *          E N V I R O N M E N T   D I V I S I O N             *
      ****************************************************************
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT IN-BONUS    ASSIGN TO INBONUS.
           SELECT OUT-REPORT  ASSIGN TO OUTREPT.
           SELECT STATETAX    ASSIGN TO INSTTAX.

      ****************************************************************
      *          D A T A   D I V I S I O N                           *
      ****************************************************************
       DATA DIVISION.
       FILE SECTION.

      ****************************************************************
      *    IN-BONUS                                    INPUT         *
      ****************************************************************

       FD  IN-BONUS
           RECORDING F
           LABEL RECORDS STANDARD
           RECORD CONTAINS 76 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS IN-BONUS-RECORD.

       01  IN-BONUS-RECORD.
           05  FILLER                PIC X(76).
           
      ****************************************************************
      *    OUT-REPORT                                  OUTPUT        *
      ****************************************************************

       FD  OUT-REPORT
           RECORDING F
           LABEL RECORDS STANDARD
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS OUT-REPORT-RECORD.

       01  OUT-REPORT-RECORD                PIC X(133).

      ****************************************************************
      *    STATETAX                                                  *
      ****************************************************************

       FD  STATETAX
           RECORDING F
           LABEL RECORDS STANDARD
           RECORD CONTAINS 80 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS IN-ST-TAX.

       01  IN-ST-TAX.                         
           05 ST-TAX-CODE                    PIC X(2).
           05 FILLER                         PIC X.
           05 ST-TAX                         PIC V9(6).
           05 FILLER                         PIC X(31).

      *WORKING-STORAGE**********************************************
       WORKING-STORAGE SECTION.
       01  FILLER                          PIC X(37) VALUE
           ' BEGIN WORKING STORAGE FOR COB30P'.

      *ACCUMULATORS
       01  ACCUMULATORS.
           05  A-BONUS-IN                  PIC S9(04)  COMP VALUE +0.
           05  A-REC-OUT                   PIC S9(04)  COMP VALUE +0.
           05  A-LINE-CTR                  PIC S9(04)  COMP VALUE 50.
           05  A-PAGE-CTR                  PIC S9(5)   COMP VALUE 0.
       
      *SWITCHES
       01  SWITCHES.
           05  BONUS-EOF-SW                PIC X VALUE 'N'.
               88  BONUS-EOF                     VALUE 'Y'.
           05  CONTROL-BREAK-SW            PIC X(2) VALUE SPACES.
       
      *STATE-TOTALS
       01  STATE-TOTALS.
           05  ST-GROSS-TOT                PIC S9(9)V99  COMP.
           05  ST-FED-TAX-TOT              PIC S9(9)V99  COMP.
           05  ST-ST-TAX-TOT               PIC S9(9)V99  COMP.
           05  ST-NET-TOT                  PIC S9(9)V99  COMP.
      
      *GRAND-TOTALS
       01  GRAND-TOTALS.
           05  GR-GROSS-TOT                PIC S9(9)V99  COMP.
           05  GR-FED-TAX-TOT              PIC S9(9)V99  COMP.
           05  GR-ST-TAX-TOT               PIC S9(9)V99  COMP.
           05  GR-NET-TOT                  PIC S9(9)V99  COMP.
      
      *TEMP-FIELDS
       01  TEMP-FIELDS.
           05  TEMP-FED                    PIC S9(9)V99  COMP VALUE 0.
           05  TEMP-ST                     PIC S9(9)V99  COMP VALUE 0.
           05  TEMP-NET                    PIC S9(9)V99  COMP VALUE 0.

      *INPUT FILE LAYOUT
       01  W-IN-BONUS-REC.
           05  W-IN-STATE                  PIC X(2).
           05  W-IN-LAST-NAME              PIC X(20).
           05  W-IN-FIRST-NAME             PIC X(15).
           05  W-IN-MIDDLE-INIT            PIC X.
           05  W-IN-GROSS-AMT              PIC S9(7)V99 COMP-3.
           05  W-IN-FED-EXEMPT-IND         PIC X.
           05  W-IN-ST-EXEMPT-IND          PIC X.
           05  FILLER                      PIC X(31).

      *CALLED-PROGRAMS
       01  W-DATE-TIME-PGM             PIC X(8)   VALUE 'COB40X'.

      *LINKAGE
       01  LS-NEW-DATE-LAYOUT              PIC X(35)  VALUE SPACE.
       01  LS-NEW-TIME-LAYOUT              PIC X(14)  VALUE SPACE.


      *PRINT LINES
       01  BLANK-LINE.
           05  FILLER                      PIC X(133).

       01  PRINT-LINES.
           05  P-OUT-REC                   PIC X(133).

           05  P-HEADER-1.
               10  P-HDR1-CC               PIC X(01) VALUE '1'.
               10  FILLER                  PIC X(11) VALUE
                                               'REPORT ID:'.
               10  P-HDR1-REPORT-ID        PIC X(08) VALUE SPACE.
               10  FILLER                  PIC X(43) VALUE SPACE.
               10  FILLER                  PIC X(23) VALUE
                                             'ENCYCLOPEDIA FANTASTICA'.
               10  FILLER                  PIC X(31) VALUE SPACE.
               10  FILLER                  PIC X(6)  VALUE 'PAGE: '.
               10  P-HDR1-PAGE-NUM         PIC Z(9)9.

           05  P-HEADER-2.
               10  P-HDR2-CC               PIC X(01) VALUE ' '.
               10  FILLER                  PIC X(62) VALUE SPACE.
               10  FILLER                  PIC X(21) VALUE
                                               'MONTHLY BONUS REPORT'.
               10  FILLER                  PIC X(14) VALUE SPACE.
               10  P-HDR2-DATE             PIC X(35) VALUE 'DATE: '.

           05  P-HEADER-3.
               10  P-HDR3-CC               PIC X(01) VALUE ' '.
               10  FILLER                  PIC X(118) VALUE SPACE.
               10  P-HDR3-TIME             PIC X(14) VALUE 'TIME:'.

           05  P-HEADER-4.
               10  P-HDR3-CC               PIC X(01) VALUE '-'.
               10  FILLER                  PIC X(39) VALUE 'NAME'.
               10  FILLER                  PIC X(12) VALUE 'STATE'.
               10  FILLER                  PIC X(15) VALUE 'GROSS'.
               10  FILLER                  PIC X(14) VALUE 'FED TAX'.
               10  FILLER                  PIC X(20) VALUE 'STATE TAX'.
               10  FILLER                  PIC X(10) VALUE 'NET'.
               10  FILLER                  PIC X(22) VALUE 'MESSAGE'.

           05  P-HEADER-5.
               10  P-HDR4-CC               PIC X(01) VALUE '+'.
               10  FILLER                  PIC X(132) VALUE ALL '_'.

           05  P-DETAIL-1.
               10  P-DTL1-CC               PIC X(01) VALUE ' '.
               10  P-DTL1-LAST-NAME        PIC X(20) VALUE SPACE.
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-FIRST-NAME       PIC X(15).
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-MIDDLE-INIT      PIC X.
               10  FILLER                  PIC X(03) VALUE SPACE.
               10  P-DTL1-STATE            PIC X(2).
               10  FILLER                  PIC X(05) VALUE SPACE.
               10  P-DTL1-GROSS            PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(4)  VALUE SPACE.
               10  P-DTL1-FED-TAX          PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(04) VALUE SPACE.
               10  P-DTL1-STATE-TAX        PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(04) VALUE SPACE.
               10  P-DTL1-NET-PAY          PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(02) VALUE SPACE.
               10  P-DTL1-MESSAGE          PIC X(22) VALUE SPACE.

           05  P-DETAIL-2.
               10  P-DTL2-CC               PIC X(01) VALUE ' '.
               10  FILLER                  PIC X(25) VALUE SPACE.
               10  P-DTL2-ST-TOT           PIC X(16) VALUE
                                              'TOTAL FOR STATE '.
               10  P-DTL2-STATE            PIC X(2).
               10  FILLER                  PIC X(5) VALUE SPACE.
               10  P-DTL2-GROSS-TOT        PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(4) VALUE SPACE.
               10  P-DTL2-FED-TAX-TOT      PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(4) VALUE SPACE.
               10  P-DTL2-ST-TAX-TOT       PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(4) VALUE SPACE.
               10  P-DTL2-NET-TOT          PIC Z,ZZZ,ZZ9.99.
               10  FILLER                  PIC X(23) VALUE SPACE.
               

           05  P-END.
               10  FILLER                  PIC X(56) VALUE SPACE.    
               10  FILLER                  PIC X(21) VALUE 
                                              '*** END OF REPORT ***'.
               10  FILLER                  PIC X(56) VALUE SPACES.

      *TABLES
       01  ST-TAX-TABLE.
           05  TAXES OCCURS 44 TIMES.
               10  STATE-CODE              PIC X(2).
               10  STATE-TAX               PIC V9(6).
       
       01  TAX-TABLE-SW                    PIC X VALUE 'N'.
           88  TAX-TABLE-FULL                    VALUE 'Y'.
           
       01  TAX-TABLE-EOF-SW                PIC X VALUE 'N'.
           88  TAX-TABLE-EOF                     VALUE 'Y'.
      
       01  TABLE-SUBS                  PIC S9(4) VALUE 1 COMP.
       
       01  STATE-CODE-SW                   PIC X VALUE 'N'.
           88  STATE-CODE-FOUND                  VALUE 'Y'.
           
       01  STATE-SEARCH                    PIC X(2) VALUE SPACES.

      *PRODECURE DIVISION*********************************************
       PROCEDURE DIVISION.

      *MAINLINE.
       P0100-MAINLINE.

           PERFORM P0200-INITIALIZATION THRU P0299-EXIT.

           PERFORM P0300-PROCESS-BONUS  THRU P0399-EXIT
               UNTIL BONUS-EOF.

           PERFORM P0400-FINALIZATION   THRU P0499-EXIT.

           MOVE +0 TO RETURN-CODE.
          
           GOBACK.
       P0199-EXIT.
           EXIT.

      *INITIALIZE.
       P0200-INITIALIZATION.

           CALL W-DATE-TIME-PGM USING LS-NEW-DATE-LAYOUT
                                      LS-NEW-TIME-LAYOUT.
           OPEN INPUT  IN-BONUS.
           OPEN OUTPUT OUT-REPORT.
           OPEN INPUT  STATETAX.
           
           MOVE LS-NEW-DATE-LAYOUT TO P-HDR2-DATE.
           MOVE LS-NEW-TIME-LAYOUT TO P-HDR3-TIME.
           MOVE 'COB60P' TO P-HDR1-REPORT-ID.

     *LOAD-ST-TAX-TABLE
           PERFORM P1000-READ-ST-TAX
           MOVE 1 TO TABLE-SUBS
           PERFORM P1100-TABLE-LOAD
               UNTIL TAX-TABLE-FULL OR TAX-TABLE-EOF
           IF TAX-TABLE-FULL OR TAX-TABLE-EOF
               DISPLAY 'TAX TABLE FULL'
               ELSE
                   DISPLAY '**** PROBLEM LOADING TABLE ****'
           END-IF.

           CLOSE STATETAX
           
           PERFORM P0700-READ-BONUS THRU P0799-EXIT.
       P0299-EXIT.
           EXIT.

      *PROCESS-BONUS.
       P0300-PROCESS-BONUS.

           IF A-LINE-CTR > 45
               MOVE 1 TO A-LINE-CTR
               PERFORM P0500-HEADERS THRU P0599-EXIT
           END-IF.

           IF CONTROL-BREAK-SW = SPACES
               MOVE W-IN-STATE  TO CONTROL-BREAK-SW
               MOVE 0 TO ST-GROSS-TOT
               MOVE 0 TO ST-FED-TAX-TOT
               MOVE 0 TO ST-NET-TOT
               MOVE 0 TO GR-GROSS-TOT
               MOVE 0 TO GR-FED-TAX-TOT
               MOVE 0 TO GR-NET-TOT
           END-IF.
           
           IF CONTROL-BREAK-SW NOT = W-IN-STATE
               PERFORM P0800-STATE-BREAK THRU PO899-EXIT
           END-IF.
           
           COMPUTE ST-GROSS-TOT = ST-GROSS-TOT + W-IN-GROSS-AMT
           
           MOVE W-IN-LAST-NAME TO P-DTL1-LAST-NAME
           MOVE W-IN-FIRST-NAME  TO P-DTL1-FIRST-NAME
           MOVE W-IN-MIDDLE-INIT TO P-DTL1-MIDDLE-INIT
           MOVE W-IN-STATE       TO P-DTL1-STATE
           MOVE W-IN-GROSS-AMT   TO P-DTL1-GROSS

           PERFORM P0900-FED-ST-TAX THRU P0999-EXIT
           
           MOVE P-DETAIL-1 TO P-OUT-REC
           
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.
           ADD +1 TO A-REC-OUT
           
           MOVE SPACES TO P-DETAIL-1.
           
           PERFORM P0700-READ-BONUS THRU P0799-EXIT.
           
       P0399-EXIT.
           EXIT.

      *FINALIZATION.
       P0400-FINALIZATION.

           PERFORM P0800-STATE-BREAK THRU P0899-EXIT

           MOVE 'TOTAL' TO P-DTL2-ST-TOT
           MOCE SPACES TO P-DTL2-STATE
           MOVE GR-GROSS-TOT TO P-DTL2-GROSS-TOT
           MOVE GR-FED-TAX-TOT TO P-DTL2-FED-TAX-TOT
           MOVE GR-ST-TAX-TOT TO P-DTL2-ST-TAX-TOT
           MOVE GR-NET-TOT TO P-DTL2-NET-TOT
           MOVE P-DETAIL-2 TO P-OUT-REC
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.
           
           CLOSE IN-BONUS.
           CLOSE OUT-REPORT.

           DISPLAY '*** COB60P TOTALS ***'.
           DISPLAY 'TOTAL RECORDS READ    : ' A-BONUS-IN.
           DISPLAY 'TOTAL RECORDS WRITTEN : ' A-REC-OUT.

       P0499-EXIT.
           EXIT.

      *HEADERS.
       P0500-HEADERS.

           ADD 1 TO A-PAGE-CTR.
           MOVE A-PAGE-CTR TO P-HDR1-PAGE-NUM.

           MOVE P-HEADER-1     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-2     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-3     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-4     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-5     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE '0'            TO P-DTL1-CC.

           MOVE 1            TO A-LINE-CTR.

       P0599-EXIT.
           EXIT.

      *WRITE-REPORT.
       P0600-WRITE-REPORT.

           WRITE OUT-REPORT-RECORD FROM P-OUT-REC
           ADD +1 TO A-LINE-CTR.

       P0699-EXIT.
           EXIT.

      *READ-BONUS.
       P0700-READ-BONUS.

           READ IN-BONUS INTO W-IN-BONUS-REC
               AT END
                   MOVE 'Y' TO BONUS-EOF-SW
               NOT AT END
                   ADD +1 TO A-BONUS-IN
           END-READ.

       P0799-EXIT.
           EXIT.

      *STATE-BREAK
       P0800-STATE-BREAK.

           COMPUTE GR-GROSS-TOT = GR-GROSS-TOT + ST-GROSS-TOT
           COMPUTE GR-FED-TAX-TOT = GR-FED-TAX-TOT + ST-FED-TAX-TOT
           COMPUTE GR-ST-TAX-TOT = GR-ST-TAX-TOT + ST-ST-TAX-TOT
           COMPUTE GR-NET-TOT = GR-NET-TOT + ST-NET-TOT
           
           MOVE CONTROL-BREAK-SW TO P-DTL2-STATE
           MOVE ST-GROSS-TOT TO P-DTL2-GROSS-TOT
           MOVE ST-FED-TAX-TOT TO P-DTL2-FED-TAX-TOT
           MOVE ST-ST-TAX-TOT TO P-DTL2-ST-TAX-TOT
           MOVE ST-NET-TOT TO P-DTL2-NET-TOT
           
           MOVE P-DETAIL-2 TO P-OUT-REC
           
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE W-IN-STATE TO CONTROL-BREAK-SW
           MOVE 0 TO ST-GROSS-TOT
           MOVE 0 TO ST-FED-TAX-TOT
           MOVE 0 TO ST-ST-TAX-TOT
           MOVE 0 TO ST-NET-TOT
           MOVE '-' TO P-DTL1-CC.

       P0899-EXIT.
           EXIT.

      *FED-ST-TAX
       P0900-FED-ST-TAX.
       
           MOVE SPACES TO P-DTL1-MESSAGE
           
           IF W-IN-FED-EXEMPT-IND = 'Y'
               MOVE 0 TO TEMP-FED
               MOVE 'FED TAX EXEMPT' TO P-DTL1-MESSAGE
           ELSE
               COMPUTE TEMP-FED = W-IN-GROSS-AMT * 0.28
           END-IF
           
           IF W-IN-ST-EXEMPT-IND = 'Y'
               MOVE 0 TO TEMP-ST
               IF P-DTL1-MESSAGE = SPACES
                   MOVE 'STATE TAX EXEMPT' TO P-DTL1-MESSAGE
               ELSE
                   MOVE 'FED/STATE TAX EXEMPT' TO P-DTL1-MESSAGE
           ELSE
               MOVE 1 TO TABLE-SUBS
               MOVE W-IN-STATE TO STATE-SEARCH
               MOVE 'N' TO STATE-CODE-SW
               PERFORM P1200-TABLE-SEARCH THRU P1299-EXIT
                   UNTIL STATE-CODE-FOUND OR 50 < TABLE-SUBS
               COMPUTE TEMP-ST ROUNDED = W-IN-GROSS-AMT * TAX(TABLE-SUBS)
            END-IF

           COMPUTE TEMP-NET = W-IN-GROSS-AMT - TEMP-FED
           COMPUTE TEMP-NET = TEMP-NET - TEMP-ST
           
           COMPUTE ST-FED-TAX-TOT =ST-FED-TAX-TOT + TEMP-FED
           COMPUTE ST-ST-TAX-TOT = ST-ST-TAX-TOT + TEMP-ST
           COMPUTE ST-NET-TOT = ST-NET-TOT + TEMP-NET
           
           MOVE TEMP-FED TO P-DTL1-FED-TAX
           MOVE TEMP-ST TO P-DTL1-ST-TAX
           MOVE TEMP-NET TO P-DTL1-NET.

      *READ TABLE RECORD
       P1000-READ-TABLE-REC.

           READ STATETAX INTO TABLE-RECORD
               AT END
                   DISPLAY 'END OF FILE'
                   SET TABLE-EOF TO TRUE
           END-READ.

       P1099-EXIT.
           EXIT.

      *LOAD STATE TAX TABLE
       P1100-TABLE-LOAD.

           MOVE ST-STATE-CODE TO STATE(TABLE-SUBS)
           MOVE ST-TAX TO TAX(TABLE-SUBS)
           DISPLAY 'POSITION ' TABLE-SUBS
                   ' CONTAINS STATE= ' STATE-CODE(TABLE-SUBS)
                   ' AND TAX= ' STATE-TAX(TABLE-SUBS)
           COMPUTE TABLE-SUBS = TABLE-SUBS + 1
          
           IF TABLE-SUBS > 50
               SET TABLE-FULL TO TRUE
           END-IF
           PERFORM P1000-READ-TABLE-REC THRU P1099-EXIT.

       P1199-EXIT.
           EXIT.

      *SEARCH STATE TAX TABLE
       P1200-SEARCH-TABLE.

           IF STATE-SEARCH = STATE(TABLE-SUBS)
               MOVE 'Y' TO STATE-CODE-SW
           ELSE
               COMPUTE TABLE-SUBS = TABLE-SUBS + 1
           END-IF.
           
       P1299-EXIT.
           EXIT.

