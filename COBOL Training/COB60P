        IDENTIFICATION DIVISION.
       PROGRAM-ID.    COB60P.
       AUTHOR.        JUSTIN MATLOCK.
       INSTALLATION.  LEARNQUEST, USA.
       DATE-WRITTEN.  JULY, 2017.
       DATE-COMPILED.
      ****************************************************************
      *                      PROGRAM COB60P                          *
      ****************************************************************
      *                                                              *
      *   THIS PROGRAM CREATES THE FIRST MONTHLY BONUS REPORT        *
      *                                                              *
      ****************************************************************

      ****************************************************************
      *          E N V I R O N M E N T   D I V I S I O N             *
      ****************************************************************
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT IN-BONUS    ASSIGN TO INBONUS.
           SELECT OUT-REPORT  ASSIGN TO OUTREPT.
           SELECT STATETAX    ASSIGN TO INSTTAX.

      ****************************************************************
      *          D A T A   D I V I S I O N                           *
      ****************************************************************
       DATA DIVISION.
       FILE SECTION.

      ****************************************************************
      *    IN-BONUS                                    INPUT         *
      ****************************************************************

       FD  IN-BONUS
           RECORDING F
           LABEL RECORDS STANDARD
           RECORD CONTAINS 76 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS IN-BONUS-RECORD.

       01  IN-BONUS-RECORD.
           05  IN-STATE-CODE                PIC X(2).
           05  IN-LAST-NAME                 PIC X(20).
           05  IN-MID-INIT                  PIC X.
           05  IN-BONUS-AMT                 PIC 9(9) COMP-3.
           05  IN-FED-TAX-EXEMPT-CODE       PIC X.
               88  VALID-FED-EXEMPT-CODE        VALUE 'Y' 'N'.
           05  IN-ST-TAX-EXEMPT-CODE        PIC X.
               88  VALID-ST-EXEMPT-CODE         VALUE 'Y' 'N'.
           05  FILLER                       PIC X(31).

      ****************************************************************
      *    OUT-REPORT                                  OUTPUT        *
      ****************************************************************

       FD  OUT-REPORT
           RECORDING F
           LABEL RECORDS STANDARD
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS OUT-REPORT-RECORD.

       01  OUT-REPORT-RECORD                PIC X(133).

      ****************************************************************
      *    STATETAX                                                  *
      ****************************************************************

       FD  STATETAX
           RECORDING F
           LABEL RECORDS STANDARD
           RECORD CONTAINS 80 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS INSTTAX.

       01  IN-ST-TAX                         PIC X(80).

      *WORKING-STORAGE**********************************************
       WORKING-STORAGE SECTION.
       01  FILLER                          PIC X(37) VALUE
           ' BEGIN WORKING STORAGE FOR COB30P'.

      *ACCUMULATORS
       01  ACCUMULATORS.
           05  A-BONUS-IN                  PIC S9(04)  COMP VALUE +0.
           05  A-REC-OUT                   PIC S9(04)  COMP VALUE +0.
           05  A-LINE-CTR                  PIC S9(04)  COMP VALUE +45.
           05  A-LINES-LEFT-CTR            PIC S9(04)  COMP VALUE +0.
           05  A-PAGE-CTR                  PIC S9(04)  VALUE ZERO.

      *INPUT FILE LAYOUT
       01  W-IN-BONUS-REC.
           05  W-IN-STATE                  PIC X(2).
           05  W-IN-LAST-NAME              PIC X(20).
           05  W-IN-FIRST-NAME             PIC X(15).
           05  W-IN-MIDDLE-INIT            PIC X.
           05  W-IN-GROSS-AMT              PIC S9(7)V99 COMP-3.
           05  W-IN-FED-EXEMPT-IND         PIC X.
           05  W-IN-ST-EXEMPT-IND          PIC X.
           05  FILLER                      PIC X(31).

      *CONSTANTS
       01  CONSTANTS.
           05  C-FED-TAX-RATE              PIC SV9(2) VALUE +.28.
           05  C-ST-EXEMPT-MSG             PIC X(21) VALUE
                                               'STATE TAX EXEMPT'.
           05  C-FD-EXEMPT-MSG             PIC X(21) VALUE
                                               'FED TAX EXEMPT'.
           05  C-ST-FD-EXEMPT-MSG          PIC X(21) VALUE
                                               'FED/STATE TAX EXEMPT'.
           05  C-STATE-HDR                 PIC X(15) VALUE
                                               'STATE TOTAL: '.
           05  C-GRAND-HDR                 PIC X(15) VALUE
                                               'GRAND TOTAL: '.
      *DATE-TIME
       01  W02-BONUS-REC.
           05  W02-TAX                     PIC 9(6)  VALUE ZEROS.
           05  W02-NET                     PIC 9(6)  VALUE ZEROS.

       01  CURRENT-DATE-TIME.
           05  DATES.
               10  CD-YYYY                 PIC 9(4)  VALUE ZERO.
               10  CD-MM                   PIC 9(2)  VALUE ZERO.
               10  CD-DD                   PIC 9(2)  VALUE ZERO.
           05  TIMING.
               10  CD-HOURS                PIC 9(2)  VALUE ZERO.
               10  CD-MINUTES              PIC 9(2)  VALUE ZERO.
               10  CD-SECONDS              PIC 9(4)  VALUE ZERO.

      *LINKAGE
       01  LS-NEW-DATE-LAYOUT              PIC X(35)  VALUE SPACE.
       01  LS-NEW-TIME-LAYOUT              PIC X(14)  VALUE SPACE.

      *SAFE-STATE
       01  S-STATE                         PIC X(2).

      *PRINT LINES
       01  BLANK-LINE.
           05  FILLER                      PIC X(133).

       01  PRINT-LINES.
           05  P-OUT-REC                   PIC X(134).

           05  P-HEADER-1.
               10  P-HDR1-CC               PIC X(01) VALUE '1'.
               10  FILLER                  PIC X(11) VALUE
                                               'REPORT ID:'.
               10  P-HDR1-REPORT-ID        PIC X(08) VALUE SPACE.
               10  FILLER                  PIC X(42) VALUE SPACE.
               10  FILLER                  PIC X(23) VALUE
                                             'ENCYCLOPEDIA FANTASTICA'.
               10  FILLER                  PIC X(40) VALUE SPACE.
               10  FILLER                  PIC X(6)  VALUE 'PAGE: '.
               10  P-HDR1-PAGE-NUM         PIC Z9.

           05  P-HEADER-2.
               10  P-HDR2-CC               PIC X(01) VALUE ' '.
               10  FILLER                  PIC X(62) VALUE SPACE.
               10  FILLER                  PIC X(21) VALUE
                                               'MONTHLY BONUS REPORT'.
               10  FILLER                  PIC X(14) VALUE SPACE.
               10  P-HDR2-DATE             PIC X(35).

           05  P-HEADER-3.
               10  P-HDR3-CC               PIC X(01) VALUE '-'.
               10  FILLER                  PIC X(33) VALUE 'NAME'.
               10  FILLER                  PIC X(23) VALUE 'STATE'.
               10  FILLER                  PIC X(12) VALUE 'GROSS'.
               10  FILLER                  PIC X(12) VALUE 'FED TAX'.
               10  FILLER                  PIC X(14) VALUE 'STATE TAX'.
               10  FILLER                  PIC X(12) VALUE 'NET'.
               10  FILLER                  PIC X(10) VALUE 'MESSAGE'.
               10  P-HDR3-TIME             PIC X(14).

           05  P-HEADER-4.
               10  P-HDR4-CC               PIC X(01) VALUE '+'.
               10  FILLER                  PIC X(132) VALUE ALL '_'.

           05  P-DETAIL-1.
               10  P-DTL1-CC               PIC X(01) VALUE ' '.
               10  P-DTL1-LAST-NAME        PIC X(20) VALUE SPACE.
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-FIRST-NAME       PIC X(15).
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-MIDDLE-INIT      PIC X.
               10  FILLER                  PIC X(03) VALUE SPACE.
               10  P-DTL1-STATE            PIC X(2).
               10  FILLER                  PIC X(03) VALUE SPACE.
               10  P-DTL1-GROSS            PIC ZZZ,ZZZ,ZZ9.99-.
               10  FILLER                  PIC X(1)  VALUE SPACE.
               10  P-DTL1-FED-TAX          PIC ZZZ,ZZZ,ZZ9.99-.
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-STATE-TAX        PIC ZZZ,ZZZ,ZZ9.99-.
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-NET-PAY          PIC ZZZ,ZZZ,ZZ9.99-.
               10  FILLER                  PIC X(01) VALUE SPACE.
               10  P-DTL1-MESSAGE          PIC X(21) VALUE SPACE.
               10  FILLER                  PIC X(01) VALUE SPACE.

           05  P-END-MSG.
               10  P-END-CC                PIC X     VALUE '-'.
               10  FILLER                  PIC X(61) VALUE SPACES.
               10  FILLER                  PIC X(71) VALUE SPACES.

      *WORKING-FIELDS
       01  WORKING-FIELDS.
           05  WF-FED-TAX                   PIC S9(9)V99 COMP-3
                                                        VALUE +0.
           05  WF-STATE-TAX                 PIC V9(6) VALUE ZEROS.

           05  WF-NET-PAY                   PIC S9(9)V99 COMP-3
                                                        VALUE +0.
           05  WF-STATE-TOTALS.
               10  WF-ST-GROSS-PAY          PIC S9(9)V99 COMP-3
                                                        VALUE +0.
               10  WF-ST-FED-TAX            PIC S9(9)V99 COMP-3
                                                        VALUE +0.
               10  WF-ST-NET-PAY            PIC S9(9)V99 COMP-3
                                                        VALUE +0.
           05  WF-GRAND-TOTALS.
               10  WF-GR-GROSS-PAY          PIC S9(9)V99 COMP-3
                                                        VALUE +0.
               10  WF-GR-FED-TAX            PIC S9(9)V99 COMP-3
                                                        VALUE +0.
               10  WF-GR-NET-PAY            PIC S9(9)V99 COMP-3
                                                        VALUE +0.
           05  WF-PREV-STATE                PIC X(2)  VALUE SPACE.

       01  STATE-TAX-AMT                    PIC S9(9)V99 COMP-3
                                                        VALUE +0.

      *SWITCHES
       01  SWITCHES.
           05  BONUS-EOF-SW                PIC X      VALUE 'N'.
               88  BONUS-EOF                          VALUE 'Y'.

           05  TABLE-EOF-SW                PIC X      VALUE 'N'.
               88  TABLE-EOF                          VALUE 'Y'.

           05  TABLE-FULL-SW               PIC X      VALUE 'N'.
               88  TABLE-FULL                         VALUE 'Y'.

           05  ST-TAX-FILE-SW              PIC X      VALUE 'N'.
               88  ST-TAX-EOF                         VALUE 'Y'.

           05  ST-CODE-SW                  PIC X      VALUE 'N'.
               88  ST-CODE-FOUND                      VALUE 'Y'.

      *TABLES
       01  ST-TAX-TABLE.
           05  TAXES OCCURS 44 TIMES.
               10  STATE-CODE              PIC X(2).
               10  STATE-TAX               PIC V9(6).
               10  TIME-ZONE               PIC X(72).

       01  SUBSCRIPTS                      BINARY.
           05  TABLE-SUBS                  PIC S9(2).

       01  TABLE-RECORD.
           05  STATE-CODE-REC              PIC X(2).
           05  STATE-TAX-REC               PIC V9(6).
           05  STATE-TZ-REC                PIC X(72).

      *DYNAMIC CALLS
       01  CALLED-PROGRAMS.
           05  W-DATE-TIME-PGM             PIC X(8)   VALUE 'COB40X'.

      *PRODECURE DIVISION*********************************************
       PROCEDURE DIVISION.

      *MAINLINE.
       P0100-MAINLINE.

           PERFORM P0200-INITIALIZATION THRU P0299-EXIT.

           PERFORM P0300-PROCESS-BONUS  THRU P0399-EXIT
               UNTIL BONUS-EOF.

           PERFORM P0400-FINALIZATION   THRU P0499-EXIT.

      *    MOVE +0 TO RETURN-CODE
      *    .
           GOBACK.
       P0199-EXIT.
           EXIT.

      *INITIALIZE.
       P0200-INITIALIZATION.

           CALL W-DATE-TIME-PGM USING LS-NEW-DATE-LAYOUT
                                      LS-NEW-TIME-LAYOUT.
           OPEN INPUT  IN-BONUS.
           OPEN OUTPUT OUT-REPORT.
           OPEN INPUT  STATETAX.

           MOVE LS-NEW-DATE-LAYOUT TO P-HDR2-DATE.
           MOVE LS-NEW-TIME-LAYOUT TO P-HDR3-TIME.
           MOVE 'COB60P' TO P-HDR1-REPORT-ID.

           PERFORM P0700-READ-BONUS THRU P0799-EXIT.

           PERFORM P1000-READ-TABLE-REC
           MOVE 1 TO TABLE-SUBS
           PERFORM P1100-TABLE-LOAD
               UNTIL TABLE-FULL OR ST-TAX-EOF
           IF TABLE-FULL OR ST-TAX-EOF
               NEXT SENTENCE
               ELSE
                   DISPLAY '**** PROBLEM LOADING TABLE ****'
           END-IF.

      ********************************************************
      *    MOVE 'N' TO ST-CODE-SW
      *    MOVE 1 TO TABLE-SUBS
      *    PERFORM P1200-SEARCH-TABLE THRU P1299-EXIT
      *        UNTIL ST-CODE-FOUND OR TABLE-SUBS > 44.
      *
      *    MOVE W-IN-STATE TO S-STATE.
      *    MOVE A-PAGE-CTR TO P-HDR1-PAGE-NUM.
      *
      *    IF BONUS-EOF
      *        DISPLAY 'RETURN CODE 88 - NO DATA TO PROCESS'
      *    END-IF.
      ***********************************************************
       P0299-EXIT.
           EXIT.

      *PROCESS-BONUS.
       P0300-PROCESS-BONUS.

           IF W-IN-STATE = WF-PREV-STATE
               CONTINUE
           ELSE
               PERFORM P0800-STATE-BREAK THRU P0899-EXIT
           END-IF.

           IF A-LINE-CTR > 45
               MOVE ZERO TO A-LINE-CTR
               PERFORM P0500-HEADERS THRU P0599-EXIT
           END-IF.

           MOVE W-IN-LAST-NAME  TO P-DTL1-LAST-NAME
           MOVE W-IN-FIRST-NAME  TO P-DTL1-FIRST-NAME
           MOVE W-IN-MIDDLE-INIT TO P-DTL1-MIDDLE-INIT
           MOVE W-IN-STATE       TO P-DTL1-STATE
           MOVE W-IN-GROSS-AMT   TO P-DTL1-GROSS

      *TABLE SEARCH SEQUENCE
           MOVE 'N' TO ST-CODE-SW
           MOVE 1 TO TABLE-SUBS
           PERFORM P1200-SEARCH-TABLE THRU P1299-EXIT
               UNTIL ST-CODE-FOUND OR TABLE-SUBS > 44.

      *FED EXEMPT MESSAGE SEQUENCE
           IF W-IN-GROSS-AMT POSITIVE
               IF W-IN-FED-EXEMPT-IND = 'Y'
                   MOVE ZEROS TO WF-FED-TAX
                   MOVE C-FD-EXEMPT-MSG TO P-DTL1-MESSAGE
               ELSE
                   COMPUTE WF-FED-TAX ROUNDED =
                                 W-IN-GROSS-AMT * C-FED-TAX-RATE
                   MOVE SPACES TO P-DTL1-MESSAGE
               END-IF

               COMPUTE WF-NET-PAY = W-IN-GROSS-AMT - WF-FED-TAX
           ELSE
               MOVE ZEROS TO WF-FED-TAX, WF-NET-PAY
           END-IF.

      *ST EXEMPT MESSAGE SEQUENCE*************************************
           IF W-IN-GROSS-AMT POSITIVE
               IF W-IN-ST-EXEMPT-IND = 'Y'
                   IF P-DTL1-MESSAGE = SPACES
                       MOVE C-ST-EXEMPT-MSG TO P-DTL1-MESSAGE
                   ELSE
                       MOVE C-ST-FD-EXEMPT-MSG TO P-DTL1-MESSAGE
                   END-IF
               ELSE
                   IF W-IN-ST-EXEMPT-IND = 'N'
                   COMPUTE STATE-TAX-AMT ROUNDED =
                           W-IN-GROSS-AMT * WF-STATE-TAX
                   MOVE WF-STATE-TAX TO
               END-IF

           ELSE
               COMPUTE WF-NET-PAY = W-IN-GROSS-AMT - WF-FED-TAX -
                       STATE-TAX-AMT
           END-IF.

      *FED/ST EXEMPT MESSAGE SEQUENCE
      *    IF W-IN-GROSS-AMT POSITIVE
      *        IF W-IN-FED-EXEMPT-IND = 'Y'
      *            IF W-IN-ST-EXEMPT-IND = 'Y'
      *                MOVE ZEROS TO WF-FED-TAX, WF-STATE-TAX
      *                MOVE C-FED-ST-EXEMPT-MSG TO P-DTL1-MESSAGE
      *            ELSE
      *        ELSE
      *            COMPUTE WF-FED-TAX ROUNDED =
      *                          W-IN-GROSS-AMT * C-FED-TAX-RATE
      *            COMPUTE WF-STATE-TAX ROUNDED =
      *                          W-IN-GROSS-AMT * ST-TAX-RATE
      *            MOVE SPACES TO P-DTL1-MESSAGE
      *        END-IF
      *
      *        COMPUTE WF-NET-PAY = W-IN-GROSS-AMT - WF-FED-TAX -
      *                             WF-STATE-TAX
      *    ELSE
      *        MOVE ZEROS TO WF-FED-TAX, WF-NET-PAY, WF-STATE-TAX
      *    END-IF.
      ************************************************************

           MOVE WF-FED-TAX TO P-DTL1-FED-TAX.
           MOVE WF-NET-PAY TO P-DTL1-NET-PAY.

           ADD W-IN-GROSS-AMT TO WF-ST-GROSS-PAY.
           ADD WF-FED-TAX TO WF-ST-FED-TAX.
           ADD WF-NET-PAY TO WF-ST-NET-PAY.

           MOVE W-IN-STATE TO WF-PREV-STATE.
           MOVE P-DETAIL-1 TO P-OUT-REC.

           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.
           ADD +1 TO A-REC-OUT

           MOVE SPACES TO P-DETAIL-1.
           PERFORM P0700-READ-BONUS   THRU P0799-EXIT.

       P0399-EXIT.
           EXIT.

      *FINALIZATION.
       P0400-FINALIZATION.

           IF A-BONUS-IN > +0
               PERFORM P0800-STATE-BREAK THRU P0899-EXIT

               MOVE SPACES TO P-DETAIL-1

               MOVE '0' TO P-DTL1-CC
               MOVE C-GRAND-HDR TO P-DTL1-FIRST-NAME
               MOVE ':' TO P-DTL1-MIDDLE-INIT
               MOVE WF-GR-GROSS-PAY TO P-DTL1-GROSS
               MOVE WF-GR-FED-TAX TO P-DTL1-FED-TAX
               MOVE WF-GR-NET-PAY TO P-DTL1-NET-PAY

               MOVE P-DETAIL-1 TO P-OUT-REC
               PERFORM P0600-WRITE-REPORT THRU P0699-EXIT

               COMPUTE A-LINES-LEFT-CTR = (45 - A-LINE-CTR)
               PERFORM P0900-PRINT-BLANKS THRU P0999-EXIT
                   A-LINES-LEFT-CTR TIMES

               MOVE P-END-MSG TO P-OUT-REC
               PERFORM P0600-WRITE-REPORT THRU P0699-EXIT
           END-IF.

           CLOSE IN-BONUS.
           CLOSE OUT-REPORT.
           CLOSE STATETAX.

           DISPLAY '*** COB60P TOTALS ***'.
           DISPLAY 'TOTAL RECORDS READ    : ' A-BONUS-IN.
           DISPLAY 'TOTAL RECORDS WRITTEN : ' A-REC-OUT.

           MOVE +0 TO RETURN-CODE.

       P0499-EXIT.
           EXIT.

      *HEADERS.
       P0500-HEADERS.

           ADD 1 TO A-PAGE-CTR.
           MOVE A-PAGE-CTR TO P-HDR1-PAGE-NUM.

           MOVE P-HEADER-1     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-2     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-3     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-HEADER-4     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE P-DETAIL-1     TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           MOVE '0'            TO P-DTL1-CC.

           MOVE +7             TO A-LINE-CTR.

       P0599-EXIT.
           EXIT.

      *WRITE-REPORT.
       P0600-WRITE-REPORT.

           WRITE OUT-REPORT-RECORD FROM P-OUT-REC
           ADD +1 TO A-LINE-CTR.

       P0699-EXIT.
           EXIT.

      *READ-BONUS.
       P0700-READ-BONUS.

           READ IN-BONUS INTO W-IN-BONUS-REC
               AT END
                   MOVE 'Y' TO BONUS-EOF-SW
               NOT AT END
                   ADD +1 TO A-BONUS-IN
           END-READ.

       P0799-EXIT.
           EXIT.

      *STATE-BREAK
       P0800-STATE-BREAK.

           MOVE SPACES TO P-DETAIL-1
           MOVE C-STATE-HDR TO P-DTL1-FIRST-NAME
           MOVE ':' TO P-DTL1-MIDDLE-INIT
           MOVE WF-PREV-STATE TO P-DTL1-STATE
           MOVE WF-ST-GROSS-PAY TO P-DTL1-GROSS
           MOVE WF-ST-FED-TAX TO P-DTL1-FED-TAX
           MOVE WF-ST-NET-PAY TO P-DTL1-NET-PAY

           MOVE P-DETAIL-1 TO P-OUT-REC
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

           ADD WF-ST-GROSS-PAY TO WF-GR-GROSS-PAY
           ADD WF-ST-FED-TAX TO WF-GR-FED-TAX
           ADD WF-ST-NET-PAY TO WF-GR-NET-PAY.

           MOVE ZEROS TO WF-ST-GROSS-PAY, WF-ST-FED-TAX, WF-ST-NET-PAY.

           MOVE W-IN-STATE TO WF-PREV-STATE.
           MOVE '-' TO P-DTL1-CC.
           ADD +2 TO A-LINE-CTR.

       P0899-EXIT.
           EXIT.

      *BLANK LINES FOR FINAL PAGE
       P0900-PRINT-BLANKS.

           MOVE SPACES TO P-OUT-REC.
           PERFORM P0600-WRITE-REPORT THRU P0699-EXIT.

       P0999-EXIT.
           EXIT.

      *READ TABLE RECORD
       P1000-READ-TABLE-REC.

           READ STATETAX INTO TABLE-RECORD
               AT END
                   SET TABLE-EOF TO TRUE
           END-READ.

       P1099-EXIT.
           EXIT.

      *LOAD STATE TAX TABLE
       P1100-TABLE-LOAD.

           MOVE TABLE-RECORD TO TAXES(TABLE-SUBS)
           DISPLAY 'POSITION ' TABLE-SUBS
                   ' CONTAINS STATE= ' STATE-CODE(TABLE-SUBS)
                   ' AND TAX= ' STATE-TAX(TABLE-SUBS)
           ADD 1 TO TABLE-SUBS
           IF TABLE-SUBS > 44
               SET TABLE-FULL TO TRUE
           END-IF
           PERFORM P1000-READ-TABLE-REC THRU P1099-EXIT.

       P1199-EXIT.
           EXIT.

      *SEARCH STATE TAX TABLE
       P1200-SEARCH-TABLE.

           IF W-IN-STATE = STATE-CODE(TABLE-SUBS)
               SET ST-CODE-FOUND TO TRUE
               MOVE STATE-TAX(TABLE-SUBS) TO WF-STATE-TAX
               COMPUTE STATE-TAX-AMT = W-IN-GROSS-AMT *
                                     WF-STATE-TAX
               DISPLAY STATE-TAX-AMT
               MOVE STATE-TAX-AMT TO P-DTL1-STATE-TAX
               DISPLAY 'POSITION ' TABLE-SUBS
                       ' CONTAINS STATE= ' STATE-CODE(TABLE-SUBS)
                       ' AND TAX= ' STATE-TAX(TABLE-SUBS)
           ELSE
               MOVE ZEROS TO STATE-TAX-AMT
               ADD 1 TO TABLE-SUBS
           END-IF.

       P1299-EXIT.
           EXIT.

